{
    "name": "EMR Platform Development",
    "dockerComposeFile": [
        "../infra/docker-compose.yml",
        "docker-compose.override.yml"
    ],
    "service": "dev",
    "workspaceFolder": "/workspace",
    "shutdownAction": "stopCompose",
    
    // Features to install
    "features": {
        "ghcr.io/devcontainers/features/rust:1": {
            "version": "1.78",
            "profile": "default"
        },
        "ghcr.io/devcontainers/features/docker-in-docker:2": {
            "version": "latest",
            "enableNonRootDocker": "true"
        },
        "ghcr.io/devcontainers/features/git:1": {
            "version": "latest"
        },
        "ghcr.io/devcontainers/features/github-cli:1": {
            "version": "latest"
        },
        "ghcr.io/devcontainers/features/node:1": {
            "version": "20"
        }
    },
    
    // Configure VS Code settings
    "customizations": {
        "vscode": {
            "settings": {
                "rust-analyzer.cargo.target": "x86_64-unknown-linux-gnu",
                "rust-analyzer.checkOnSave.command": "clippy",
                "rust-analyzer.checkOnSave.extraArgs": ["--all-targets", "--all-features"],
                "rust-analyzer.cargo.features": "all",
                "rust-analyzer.procMacro.enable": true,
                "rust-analyzer.imports.granularity.group": "module",
                "rust-analyzer.imports.prefix": "crate",
                "editor.formatOnSave": true,
                "editor.formatOnType": true,
                "files.watcherExclude": {
                    "**/target/**": true,
                    "**/node_modules/**": true
                },
                "terminal.integrated.defaultProfile.linux": "bash",
                "git.enableSmartCommit": true,
                "git.confirmSync": false,
                "git.autofetch": true,
                "sqltools.connections": [
                    {
                        "name": "EMR PostgreSQL",
                        "driver": "PostgreSQL",
                        "previewLimit": 50,
                        "server": "postgres",
                        "port": 5432,
                        "database": "emr_platform",
                        "username": "emr_user",
                        "password": "emr_secure_password_change_in_prod"
                    }
                ]
            },
            "extensions": [
                "rust-lang.rust-analyzer",
                "serayuzgur.crates",
                "vadimcn.vscode-lldb",
                "tamasfe.even-better-toml",
                "ms-vscode.vscode-json",
                "ms-vscode.hexeditor",
                "ms-vscode.test-adapter-converter",
                "hbenl.vscode-test-explorer",
                "GitHub.copilot",
                "GitHub.copilot-chat",
                "GitHub.vscode-pull-request-github",
                "ms-azuretools.vscode-docker",
                "ms-vscode-remote.remote-containers",
                "bradlc.vscode-tailwindcss",
                "formulahendry.auto-rename-tag",
                "esbenp.prettier-vscode",
                "mtxr.sqltools",
                "mtxr.sqltools-driver-pg",
                "ms-vscode.vscode-typescript-next",
                "ms-playwright.playwright",
                "ms-python.python",
                "ms-python.black-formatter",
                "charliermarsh.ruff",
                "redhat.vscode-yaml",
                "ms-vscode.makefile-tools",
                "jnoortheen.nix-ide",
                "ms-vscode.live-server",
                "humao.rest-client",
                "rangav.vscode-thunder-client",
                "formulahendry.code-runner",
                "streetsidesoftware.code-spell-checker",
                "ms-vscode.vscode-eslint",
                "ms-vscode.vscode-css-peek",
                "ms-vscode.vscode-html-language-features",
                "ms-vscode.vscode-markdown-language-features",
                "yzhang.markdown-all-in-one",
                "DavidAnson.vscode-markdownlint",
                "shd101wyy.markdown-preview-enhanced",
                "ms-vscode.vscode-github-issue-notebooks",
                "ms-vscode.references-view",
                "ms-vscode.vscode-speech",
                "ms-vscode.wordcount",
                "ms-toolsai.jupyter",
                "ms-toolsai.vscode-jupyter-cell-tags",
                "ms-toolsai.vscode-jupyter-slideshow",
                "ms-toolsai.jupyter-keymap",
                "ms-toolsai.jupyter-renderers",
                "ms-toolsai.vscode-jupyter-powertoys"
            ]
        }
    },
    
    // Install additional packages
    "postCreateCommand": "bash .devcontainer/post-create.sh",
    
    // Forward ports for development
    "forwardPorts": [
        8080,  // API server
        3000,  // Web server
        5432,  // PostgreSQL
        6379,  // Redis
        4222,  // NATS
        8222,  // NATS monitoring
        9090,  // Jobs metrics
        9091,  // Prometheus
        3001   // Grafana
    ],
    
    // Port attributes
    "portsAttributes": {
        "8080": {
            "label": "API Server",
            "protocol": "https"
        },
        "3000": {
            "label": "Web Server",
            "protocol": "https"
        },
        "5432": {
            "label": "PostgreSQL",
            "protocol": "tcp"
        },
        "6379": {
            "label": "Redis",
            "protocol": "tcp"
        },
        "4222": {
            "label": "NATS",
            "protocol": "tcp"
        },
        "8222": {
            "label": "NATS Monitoring",
            "protocol": "http"
        },
        "9090": {
            "label": "Jobs Metrics",
            "protocol": "http"
        },
        "9091": {
            "label": "Prometheus",
            "protocol": "http"
        },
        "3001": {
            "label": "Grafana",
            "protocol": "http"
        }
    },
    
    // Container user
    "remoteUser": "vscode",
    
    // Environment variables
    "remoteEnv": {
        "RUST_LOG": "debug",
        "RUST_BACKTRACE": "1",
        "DATABASE_URL": "postgresql://emr_user:emr_secure_password_change_in_prod@postgres:5432/emr_platform",
        "REDIS_URL": "redis://redis:6379",
        "NATS_URL": "nats://nats:4222",
        "DEVELOPMENT_MODE": "true",
        "CARGO_TARGET_DIR": "/tmp/target"
    },
    
    // Mounts
    "mounts": [
        "source=${localWorkspaceFolder},target=/workspace,type=bind,consistency=cached",
        "source=emr-cargo-cache,target=/usr/local/cargo/registry,type=volume",
        "source=emr-target-cache,target=/tmp/target,type=volume"
    ],
    
    // Run arguments
    "runArgs": [
        "--init",
        "--privileged"
    ],
    
    // Lifecycle scripts
    "initializeCommand": "echo 'Initializing EMR Platform development environment...'",
    "onCreateCommand": "echo 'EMR Platform devcontainer created successfully!'",
    "postStartCommand": "echo 'EMR Platform development environment is ready!'"
} 